Механизм работы
+1. Слушаем сокет
2+. Создаем соединение
+2.1 Добавляем соединение в очередь для обработки
+3. Поток достает из очереди соединение и передает в com.amatsuka.tasks.ConnectionTask
4. С браузером устанавливается WS соединение
5. Из com.amatsuka.tasks.ConnectionTask возвращается IOWSSocket (работает с абстракциями WS сообщений и ковертирует их в и из байтового потока)

6. На основе IOWSSocket создается WSClient и добавляется в com.amatsuka.ClientRegistry
7. Для WSClient создается поток на чтение
8. На запись для всех клиентов работает отдельный поток
9. Генерация рандомного uuid для клиента

Проблемы:
1. Необработанные исключения в потоках игнорируются
2. Что делать если барузер не принял Sec-WebSocket-Accept - нужно проверить не разорвано ли сокет-соединение
3. При возникновении ошибки в потоке прекращать итерацию и восстанавливать поток
4. Неверно кодирует длину данных для исходящего фрейма

Таски
1. Кодирование исходящего фрейма